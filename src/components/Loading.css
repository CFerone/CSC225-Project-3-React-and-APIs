/* 
    Use the website "https://jigsaw.w3.org/css-validator/#validate_by_input", to check for errors in the code
    ALWAYS CHECK FOR ERRORS USING THE ONLINE VALIDATOR !!!
*/

/*
        Courtney Ferone - CSC 225 Project #3 (APIs and React)

        Design Direction:
        Your assignment is to use Create React App as a starting point and create a site that does the following:
        Includes the CSS from Bootstrap 5.X
        When a user first loads the site, they should see a loading notification and make an AJAX (using axios.get()) 
            request to the API Collection. When you get the response back, hide the loading notification and output the 
            listing of employees. Be creative :-).
        When a user clicks on an individual employee in the listing created in a previous state, the application should 
            display loading notification, retrieve the employee data (using the resource endpoint scheme) and then replace 
            the loading notification with a card containing the employee meta (start date, role, department, photo, name, etc.). 
            See https://getbootstrap.com/docs/5.1/components/card/ as a starting point for what is meant mean by a `card.`
*/
/*

    The below line must be added to the Loading.js file to reference this stylesheet: (must be located at the top of the file)
        import './Loading.css';
*/



/* CSS from https://loading.io/css/ to decorate our loading function */
.lds-spinner {
    display: inline-block;
    position:fixed;
    margin:auto;
    left:0;
    right:0;
    top:0;
    bottom:0;
    width: 80px;
    height: 80px;  
  }
  .lds-spinner div {
    transform-origin: 40px 40px;
    animation: lds-spinner 1.2s linear infinite;
  }
  .lds-spinner div:after {
    content: " ";
    display: block;
    position: absolute;
    top: 3px;
    left: 37px;
    width: 6px;
    height: 18px;
    border-radius: 20%;
    background: #000;
  }
  .lds-spinner div:nth-child(1) {
    transform: rotate(0deg);
    animation-delay: -1.1s;
  }
  .lds-spinner div:nth-child(2) {
    transform: rotate(30deg);
    animation-delay: -1s;
  }
  .lds-spinner div:nth-child(3) {
    transform: rotate(60deg);
    animation-delay: -0.9s;
  }
  .lds-spinner div:nth-child(4) {
    transform: rotate(90deg);
    animation-delay: -0.8s;
  }
  .lds-spinner div:nth-child(5) {
    transform: rotate(120deg);
    animation-delay: -0.7s;
  }
  .lds-spinner div:nth-child(6) {
    transform: rotate(150deg);
    animation-delay: -0.6s;
  }
  .lds-spinner div:nth-child(7) {
    transform: rotate(180deg);
    animation-delay: -0.5s;
  }
  .lds-spinner div:nth-child(8) {
    transform: rotate(210deg);
    animation-delay: -0.4s;
  }
  .lds-spinner div:nth-child(9) {
    transform: rotate(240deg);
    animation-delay: -0.3s;
  }
  .lds-spinner div:nth-child(10) {
    transform: rotate(270deg);
    animation-delay: -0.2s;
  }
  .lds-spinner div:nth-child(11) {
    transform: rotate(300deg);
    animation-delay: -0.1s;
  }
  .lds-spinner div:nth-child(12) {
    transform: rotate(330deg);
    animation-delay: 0s;
  }
  @keyframes lds-spinner {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }